% version: 1

define disjoint_sort(xs :: Vector<Integer>, indices: indices :: Vector<Integer>) -> Vector<Integer>
  let update = ([index, value]) => Vector.update(items, at: index, put: value);
  let sorted_indices = Vector.sort(Set.toVector(indices));
  let sorted_subset  = xs 
                     |> Vector.map(?, with: (i) => xs[i]) 
                     |> Vector.sort(?);

  return Iterable.zip(sorted_indices, with: sorted_subset)
      |> Iterable.fold(?, from: xs, using: update)
where
  assert disjoint_sort([7, 6, 5, 4, 3, 2, 1, 0], indices: [set| 6, 1, 7])
     ==> [7, 0, 5, 4, 3, 2, 1, 6]
end
